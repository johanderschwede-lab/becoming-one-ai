{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/DOCUMENT_INDEX.md", "processed_at": "2025-08-19T11:18:13.129201", "categories": ["method_core", "personality_systems", "technical", "documentation", "ai_agents", "sacred_library", "content_processing"], "analysis_summary": "TOPICS: AI Project Documentation, System Architecture, Vision & Mission, Key Features, Technical Stack, Implementation, Revolutionary Achievements\nTYPE: Index Document\nCONCEPTS: Sacred Libraries, Tiered Wisdom Synthesis, Personality Synthesis, Connection Platform, Feeling-state analysis, Emotional anchor detection, Schaubilder integration\nRATIO: 60% Technical / 40% Conceptual\nDETAILS: Detailed infrastructure, deployment, revenue model, detailed technical architecture and roadmap, core method implementation and knowledge integration", "file_hash": "ea217693edc4319ffa9262a3d04d4fc64de3ca9b49937a737fc2fe2a61005fd4"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/JOURNEY_ORCHESTRATION.md", "processed_at": "2025-08-19T11:18:21.485832", "categories": ["technical", "ai_agents"], "analysis_summary": "TOPICS: Journey Orchestration System, Omnichannel Experience, Core Architecture, Python Programming, System Implementation\nTYPE: Technical Guide/Implementation Manual\nCONCEPTS: Channel Routing, Identity Resolution, State Management, Intent Classification, Handler Selection, Response Composition, Interaction Logging, Asynchronous Programming\nRATIO: 80% Technical / 20% Conceptual\nDETAILS: The document provides a Python class implementation of a Journey Orchestration System. The system includes several components such as a ChannelRouter, IdentityResolver, StateManager, IntentClassifier, HandlerSelector, ResponseComposer, and InteractionLogger. The system processes interactions asynchronously, taking in raw events and routing them, resolving identities, updating user states, classifying intents, selecting handlers, composing responses, and logging interactions.", "file_hash": "44b8c2a1a6771043eb06eda37f5cce961b465bd895d828292b2f1b1f8610af92"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/SYSTEM_COMPASS.md", "processed_at": "2025-08-19T11:18:26.522616", "categories": ["technical", "ai_agents", "sacred_library"], "analysis_summary": "TOPICS: System Compass, Bot Alignment, Human Development Tools, AI-Powered System, Personal Development, Human Connection\nTYPE: Guideline Document\nCONCEPTS: Single Source of Truth, Read-First, Write-Deliberately, Versioned Changes, North Star, Purpose, Mission, Non-negotiables\nRATIO: 30% Technical / 70% Conceptual\nDETAILS: The document applies to several systems including Telegram Bot (entryway), Supabase memory, LLM Orchestrator, Retrieval Layer, Offer Router.", "file_hash": "f308c65beb94861942476fe0a35397be511b45e184e366ff7b7299663d2941d9"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/TEST_TECHNICAL.md", "processed_at": "2025-08-19T11:18:34.384596", "categories": ["technical"], "analysis_summary": "TOPICS: System Architecture, Components, API Integration, Deployment, Implementation Details\nTYPE: Technical Implementation Guide\nCONCEPTS: Database Layer, Supabase, Pinecone, Redis, API Integration, FastAPI backend, RESTful endpoints, WebSocket support, Deployment, Railway hosting, GitHub Actions, Docker containers, async/await patterns, error handling, SOLID principles, test coverage\nRATIO: 80% Technical / 20% Conceptual\nDETAILS: The document details the use of various technologies and tools for system architecture including Supabase, Pinecone, Redis, FastAPI, RESTful endpoints, WebSocket, Railway, GitHub Actions, and Docker containers. It also discusses the implementation of async/await patterns, proper error handling, adherence to SOLID principles, and maintaining test coverage.", "file_hash": "8422bd5501d4cafddd0bfaf767ddaff110fd59e343e6b378ee9307d2711a26e2"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/STORAGE_STRATEGY.md", "processed_at": "2025-08-19T11:18:42.091975", "categories": ["content_processing"], "analysis_summary": "TOPICS: Data Storage, Clean Data Architecture, Supabase, Core Data Types, Identity & Core User Data, Interaction Events, SQL\n\nTYPE: Technical Document/Implementation Guide\n\nCONCEPTS: Data Types, Data Storage, Supabase, Identity Registry, Identity Links, Event Logging, SQL, Database Tables\n\nRATIO: 80% Technical, 20% Conceptual\n\nDETAILS: The document provides SQL scripts for creating tables in a database. The tables include 'identity_registry' and 'identity_links' for storing identity and core user data, and 'event_log' for logging interaction events. The 'identity_registry' table includes fields for person_id, created_at, last_seen_at, consent_status, and metadata. The 'identity_links' table includes fields for link_id, person_id, platform, platform_id, verified, created_at and a unique constraint on platform and platform_id. The 'event_log' table's structure is not fully shown.", "file_hash": "79ae7486ec4b5ef1d117f54ca7f43f6d2d9f94a48a172d2a34d83c7de16389b2"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/SIMPLE_STARTING_POINT.md", "processed_at": "2025-08-19T11:18:46.359021", "categories": ["technical", "ai_agents", "content_processing"], "analysis_summary": "TOPICS: Bot Development, Python Programming, Telegram API, Identity Tracking\nTYPE: Technical Guide/Documentation\nCONCEPTS: Simple Bot Implementation, Message Handling, Logging, Identity Tracking, SQLite3 Database, Dataclasses\nRATIO: 80% Technical / 20% Conceptual\nDETAILS: The document provides Python code snippets for creating a simple bot using the Telegram API. It starts with a basic implementation that includes a single message handler and logging to a file. It then discusses adding identity tracking using SQLite3 and Python's dataclasses. The bot's main function is to receive messages and respond with a basic acknowledgment.", "file_hash": "c24997be60b0c5c009a991cdd12207dfdd05997746c982aca8e20df74bcaa253"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/SYSTEM_ARCHITECTURE_PRINCIPLES.md", "processed_at": "2025-08-19T11:18:52.921141", "categories": ["technical", "content_processing"], "analysis_summary": "TOPICS: System Architecture, Separation of Concerns, Component Independence, Loose Coupling, Independent Data Stores, Component Breakdown\nTYPE: Technical Document/Guide\nCONCEPTS: Core Architectural Principles, Message Queues, Event Streams, HTTP APIs, Data Stores, PostgreSQL, Time-series DB, Vector DB, Redis, Identity Service\nRATIO: 70% Technical / 30% Conceptual\nDETAILS: The document provides specific implementation details such as the use of PostgreSQL for identity data, Time-series DB or event store for interactions, Vector DB + metadata store for knowledge, and Redis or similar for real-time state. It also includes a truncated Python code snippet for creating an identity registry in PostgreSQL.", "file_hash": "878e7a52fd24e4ffb1b3944a0f2c326b25703773450625604336981f091ff4b8"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/TEST_METHOD_CORE.md", "processed_at": "2025-08-19T11:18:58.937763", "categories": ["method_core", "technical"], "analysis_summary": "TOPICS: Emotional anchor recognition, feeling-state transformation, Becoming One\u2122 method, The Pearl Process, Feeling-State Navigation\nTYPE: Instructional/Conceptual Document\nCONCEPTS: Emotional Anchors, Recognition of stuck patterns, Understanding resistance points, Identifying transformation opportunities, The Pearl Process, Digesting emotional content, Extracting wisdom, Integration of insights, Feeling-State Navigation, Present moment awareness, Direct access to feelings, Transformation through presence\nRATIO: 20% Technical / 80% Conceptual\nDETAILS: The document provides a step-by-step guide for emotional anchor work which includes identifying the anchor point, feeling into the resistance, allowing transformation, extracting the Pearl, and integrating the wisdom.", "file_hash": "56aaf35a3eb9eda945ce56e322e6fe449ce976b612a0403bc85fd72e8bb627a4"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/METHODOLOGICAL_INNOVATIONS.md", "processed_at": "2025-08-19T11:19:04.770678", "categories": ["method_core", "technical", "ai_agents", "content_processing"], "analysis_summary": "TOPICS: Methodological Innovations, Revolutionary Concepts, Unique Approaches, Dual-Purpose Logic System, Public Transformation, Internal Evolution\nTYPE: Technical Document\nCONCEPTS: Dual-Purpose Logic System, Public Transformation, Internal Evolution, Cross-pollination, Method Insight, User Response, Interaction, Pattern Recognition, Impact Analysis, Method Evolution\nRATIO: 70% Technical / 30% Conceptual\nDETAILS: The document provides a Python code snippet for a class called 'DualPurposeOrchestrator' which has methods for processing interactions, generating user responses, extracting method insights, updating method knowledge, and enhancing response patterns.", "file_hash": "c9169fe792b2c57a7ff6607203dbc6e1a2b7d8655cf66adececb06db6473fb7a"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/BECOMING_ONE_AI_COMPLETE_PROJECT_MASTER_PROMPT.md", "processed_at": "2025-08-19T11:19:11.256926", "categories": ["method_core", "personality_systems", "technical", "documentation", "ai_agents", "sacred_library", "content_processing"], "analysis_summary": "TOPICS: AI System, Spiritual Development, Connection Platform, Sacred Library System, Ecosystem, Wisdom Preservation, Deep Synthesis, Authentic Connection, Business Integration, Personality Mapping\nTYPE: Project Master Prompt\nCONCEPTS: AI-powered spiritual development ecosystem, Zero-hallucination access, Cross-library intelligence, Spiritual compatibility matching, Spiritual principles in business, Comprehensive personality mapping\nRATIO: 40% Technical / 60% Conceptual\nDETAILS: The document does not provide specific implementation details. It outlines the core mission and key concepts of the project, but does not delve into the technical aspects of how these goals will be achieved.", "file_hash": "1bea1cb2a38e3c71f6828f2851fa83e6d17cf2b633a0d0df1f98b342ff2732f9"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/MASTER_TECHNICAL_INVENTORY.md", "processed_at": "2025-08-19T11:19:23.028151", "categories": ["technical", "content_processing"], "analysis_summary": "TOPICS: System Architecture, Integration Points, Channel Router, Knowledge Pipeline, Journey Orchestration, Content Processing\n\nTYPE: Technical Inventory Document\n\nCONCEPTS: Webhook ingestion, Message processing, Chat integration, Identity resolution, Video processing, Document extraction, Vault synchronization, Database integration, Transcription service, Chunking and embedding, Vector store updates, User state management, Intent classification, Handler routing, Response composition, Safety checks, Interaction logging, Live call transcription, Video content extraction, Document parsing, Metadata enrichment\n\nRATIO: 80% Technical / 20% Conceptual\n\nDETAILS: The document provides a detailed overview of the technical inventory for a system architecture, including specific tools and processes used in different scenarios. For instance, Telegram webhook ingestion and WhatsApp message processing are used in the Channel Router scenario, while Zoom/Meet recording ingestion, YouTube video processing, and PDF document extraction are part of the Knowledge Pipeline. The document also mentions specific services and platforms, such as Whisper for transcription, Pinecone for vector store updates, and BuddyBoss for chat integration.", "file_hash": "82b89e4d33c5badaaabe8bed76adc873a2c0cb7b93007a0ea2e37db44672661d"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/TEST_MASTER_PROMPT.md", "processed_at": "2025-08-19T12:42:58.130690", "categories": ["documentation"], "analysis_summary": "TOPICS: Test master prompt document, Review system, Personality analysis, Emotional anchor detection, WillB.one community integration\nTYPE: Technical Document\nCONCEPTS: Master prompt, Review request, Personality analysis, Emotional anchor detection, Community integration\nRATIO: 70% Technical / 30% Conceptual\nDETAILS: The document discusses key changes including enhanced personality analysis, improved emotional anchor detection, and better integration with the WillB.one community. It is designed to trigger the review system automatically.", "file_hash": "9306c9402f46c9f7bf3bd7d1915e127454c88ad9dbab3ff71a80d6d2beb766c3"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/TEST_MASTER_PROMPT.md", "processed_at": "2025-08-19T12:54:26.453820", "categories": ["documentation"], "analysis_summary": "TOPICS: Master prompt document, Review system, Personality analysis, Emotional anchor detection, WillB.one community integration\nTYPE: Technical Document\nCONCEPTS: Master prompt, Review request, Personality analysis, Emotional anchor detection, Community integration\nRATIO: 70% Technical / 30% Conceptual\nDETAILS: The document discusses enhancements in personality analysis capabilities, improvements in emotional anchor detection, and better integration with the WillB.one community. However, it does not provide specific implementation details.", "file_hash": "d253d0fc7cd7f7f63c61ed9b0231446f8653530d2d3e593890ac9fac8abb4ea5"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/TEST_AI_AGENT.md", "processed_at": "2025-08-19T12:54:32.337116", "categories": ["technical"], "analysis_summary": "TOPICS: AI Agent, Community Moderation, Content Filtering, Sentiment Analysis, Integration with Moderation Tools\nTYPE: Proposal Document\nCONCEPTS: Automated Content Filtering, Sentiment Analysis, Integration with Existing Tools, API Integrations, Training Data, Core Feature Stability\nRATIO: 60% Technical / 40% Conceptual\nDETAILS: The implementation of the new AI agent requires additional API integrations and training data from existing moderation patterns. It should be implemented after the core features are stable.", "file_hash": "f10898a1ab8f7b724b1b20d5418f38b2695a2f8a9b3448dbf76622ebce691732"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/TEST_MASTER_PROMPT.md", "processed_at": "2025-08-19T12:58:15.252055", "categories": ["master_prompt"], "analysis_summary": "TOPICS: Master prompt document, review system, personality analysis, emotional anchor detection, WillB.one community integration, system prompt updates, personal development\nTYPE: Technical document\nCONCEPTS: Enhanced personality analysis, improved emotional anchor detection, better community integration, accurate guidance for personal development\nRATIO: 70% Technical / 30% Conceptual\nDETAILS: The document discusses improvements in the system's capabilities such as personality analysis, emotional anchor detection, and community integration. It also mentions the system's ability to provide more accurate guidance for personal development. No specific implementation details are provided.", "file_hash": "0d9ef02ced8cbee5cbe91998be8ff86cfae3d3b5d2afa9ac1683f00ec69b6ee7"}
{"file_path": "/Users/johanniklasson/Documents/becoming-one-ai/CompassBuilder_Phase2/documents_to_process/TEST_DOCUMENT.md", "processed_at": "2025-08-19T13:05:49.610869", "categories": ["documentation"], "analysis_summary": "TOPICS: Test Document, Master Prompt Review, User Experience, System Performance, Integration Capabilities\nTYPE: Review Document\nCONCEPTS: Master Prompt Review, Enhanced User Experience, Improved System Performance, Better Integration Capabilities\nRATIO: 40% Technical / 60% Conceptual\nDETAILS: The document does not provide specific implementation details. It focuses on the key changes such as enhanced user experience, improved system performance, and better integration capabilities.", "file_hash": "f887def7bc7789f837ad4331e37fe5b9311276db8a27b94fae1f19162b07a7da"}
